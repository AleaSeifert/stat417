---
title: "regression_model"
format: html
editor: source
---

## Creating Regression Model
```{r}

library(tidyverse)
library(survival)


```

## Testing different models
```{r}



model1 <- coxph(Surv(`time`, censor)~as.factor(gender), data = mini_times)

model2 <- coxph(Surv(`time`, censor)~as.factor(day), data = mini_times)

model_puz <- coxph(Surv(`time`, censor)~as.factor(puzzle), data = mini_times)

model3 <- coxph(Surv(`time`, censor)~squares, data = mini_times)

model4 <- coxph(Surv(`time`, censor)~reaction_time, data = mini_times)



main_effects_model <- coxph(Surv(`time`, censor)~reaction_time + squares + as.factor(day)+as.factor(gender)+as.factor(puzzle), data = mini_times)

summary(main_effects_model)

summary(model1)
summary(model2)
summary(model3)
summary(model4)

summary(model_puz)

step(model_puz)
step(model1)

step(main_effects_model)

step(main_effects_model, scope = ~. ^2)

step(model3)


coxph(formula = Surv(time, censor) ~ squares + as.factor(gender) + 
    squares:as.factor(gender), data = mini_times)|>summary()

model_squares <- coxph(formula = Surv(time, censor) ~ squares, data = mini_times)

summary(model_squares)



```

Select model_puz



## Testing Model Assumptions



### Martingale Residuals
```{r}


mart <- residuals(model_squares, type = "martingale")
plot(as.numeric(mini_times$squares), mart, type = "p", xlab = "Squares", ylab = "Martingale Residuals",
     main = "Predictor: Squares")
smooth.sres <-lowess(mini_times$squares, mart)
lines(smooth.sres$x, smooth.sres$y, lty = 1)


```


### Schoenfeld Residuals
```{r}
schoen <- residuals(model_squares, type = "schoenfeld")


comp.times <- sort(mini_times[mini_times$censor!= 0,]$time)
plot(comp.times, schoen, xlab="Time", ylab = "Schoenfeld Residuals",
     main = "Predictor: Squares"
     )
smooth.sres <-lowess(comp.times, schoen)
lines(smooth.sres$x, smooth.sres$y, lty = 1)


```

### Formal PH Test
```{r}
cox.zph(model_puz, transform = "log")
```
